#include<iostream>
#include <cstdlib>
#include <ctime>
#include <chrono>
using namespace std::chrono;
using namespace std;
void shellSort(int arr[], int n)
{
    int gap = n / 2;
    while(gap>0)
    {
        for (int i = gap; i < n; i++)
        {
            int temp = arr[i];
            int j=i;

            while (j >= gap && arr[j - gap] > temp)
            {
                arr[j] = arr[j - gap];
                j = j - gap;
            }
            arr[j] = temp;
        }
        gap = gap / 2;
    }
}
int main() {
    int n, j;
    srand(time(nullptr));
    n = 1000;
    int* v = new int[1000];

    for (int i = 0; i < n; i++)
    {
        v[i] = rand() % 1000;
    }
    auto start = high_resolution_clock::now();
    shellSort(v,n);
    auto stop = high_resolution_clock::now();
    auto duration = duration_cast<microseconds>(stop - start);

    cout << "Time taken by Shell sort: " << duration.count() << " microseconds" << endl;

    return 0;
}